# Configuration de l'application
spring.application.name=backend

# Connexion à PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5433/zeineb
spring.datasource.username=postgres
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuration de la pool de connexions
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Configuration du serveur
server.port=8080

# Configuration email (Gmail SMTP pour demo)
# Remplacez ces valeurs par vos vraies credentials Gmail
# 1. Activez la vérification en 2 étapes sur votre compte Gmail
# 2. Générez un mot de passe d'application: https://myaccount.google.com/apppasswords
# 3. Utilisez votre email Gmail et le mot de passe d'application
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=votre-email@gmail.com
spring.mail.password=votre-mot-de-passe-application
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Configuration email (Gmail SMTP pour demo)
# Remplacez ces valeurs par vos vraies credentials Gmail
# 1. Activez la vérification en 2 étapes sur votre compte Gmail
# 2. Générez un mot de passe d'application: https://myaccount.google.com/apppasswords
# 3. Utilisez votre email Gmail et le mot de passe d'application
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=votre-email@gmail.com
spring.mail.password=votre-mot-de-passe-application
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Configuration OpenRouter API
openrouter.api.key=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
openrouter.api.url=https://openrouter.ai/api/v1/chat/completions

# Configuration Metabase API
metabase.api.url=http://localhost:3000
metabase.api.username=zeineb.romdhani12@gmail.com
metabase.api.password=zeineb1234
metabase.database.id=1

# Configuration n8n webhook
# Remplacez cette URL par votre vraie instance n8n
n8n.webhook.url=http://localhost:5678/webhook/chat-analysis
n8n.webhook.method=POST
